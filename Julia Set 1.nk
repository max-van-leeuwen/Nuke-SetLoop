set cut_paste_input [stack 0]
BackdropNode {
 inputs 0
 name BackdropNode3
 tile_color 0x464646ff
 label relighting
 note_font_size 42
 selected true
 xpos -275
 ypos 603
 bdwidth 903
 bdheight 449
 z_order -1
}
BackdropNode {
 inputs 0
 name BackdropNode1
 tile_color 0x464646ff
 label colours
 note_font_size 42
 selected true
 xpos -506
 ypos -365
 bdwidth 585
 bdheight 547
}
BackdropNode {
 inputs 0
 name BackdropNode2
 tile_color 0x313131ff
 label "generate normals"
 note_font_size 42
 selected true
 xpos 395
 ypos 683
 bdwidth 223
 bdheight 313
}
BackdropNode {
 inputs 0
 name BackdropNode4
 tile_color 0x464646ff
 label "loop 1-439"
 note_font_size 42
 selected true
 xpos 25
 ypos 2068
 bdwidth 290
 bdheight 188
}
BackdropNode {
 inputs 0
 name BackdropNode5
 tile_color 0x464646ff
 label stars
 note_font_size 42
 selected true
 xpos 25
 ypos 1411
 bdwidth 290
 bdheight 424
}
BackdropNode {
 inputs 0
 name SetLoop_Container
 tile_color 0x1c1c1cff
 gl_color 0xafaf64ff
 label "<center>SetLoop container"
 note_font "Verdana Italic"
 note_font_color 0x626262ff
 selected true
 xpos -119
 ypos -1345
 bdwidth 336
 bdheight 516
 z_order 1
 addUserKnob {20 Loop}
 addUserKnob {26 SetLoop_bd l "" +STARTLINE T "Keep the loop within this backdrop!\nResize the backdrop if necessary.\nGo to Loop_End for configuration."}
}
StickyNote {
 inputs 0
 name StickyNote2
 label "GradientEditor by Mads Hagbarth Damsbo\n\ndownload from NukePedia to have full functionality,\nit makes gradients easy to make\n\n|\nV"
 selected true
 xpos -496
 ypos -285
}
Expression {
 inputs 0
 temp_name0 aspect
 temp_expr0 height/width
 channel0 {rgba.red -rgba.green -rgba.blue none}
 expr0 "((x / aspect * xsize) / width) + (xslide / aspect)"
 expr1 "((y * ysize) / height) + yslide"
 expr2 aspect
 name Expression_UV
 selected true
 xpos 6
 ypos -1647
 addUserKnob {20 User}
 addUserKnob {7 xsize R -3 3}
 xsize 3.5
 addUserKnob {7 ysize R -3 3}
 ysize {{xsize}}
 addUserKnob {7 xslide}
 xslide -1.75
 addUserKnob {7 yslide}
 yslide {{xslide}}
}
NoOp {
 name Loop_Begin
 knobChanged "\n"
 updateUI "\n"
 tile_color 0xa50000ff
 note_font "Verdana Italic"
 note_font_color 0xffffffff
 selected true
 xpos 6
 ypos -1262
 addUserKnob {20 Loop}
 addUserKnob {26 loopbegin l "" +STARTLINE T "Go to Loop_End for configuration."}
}
Expression {
 temp_name0 valid
 temp_expr0 "hypot(Br, Bg) < 2"
 temp_name1 constant
 temp_expr1 Loop_End.constant
 temp_name2 a_value
 temp_expr2 Loop_End.a_value
 expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
 expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
 expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
 enable_mix_luminance false
 name Expression_JuliaSet
 selected true
 xpos 6
 ypos -1127
}
Group {
 name Loop_End
 knobChanged "\n# Max van Leeuwen - maxvanleeuwen.com\n# SetLoop 1.7\n\n# knobChanged\n\n\n\n# get current node\nn = nuke.thisNode()\n\n\n\nif nuke.thisKnob() == n\['loops']:\n\n    # do not allow loops to go under 1\n    if nuke.thisKnob().value() < 1:\n        n\['loops'].setValue(1)\n\n        \n\nif nuke.thisKnob() == n\['scroll']:\n    \n    # do not allow scroll to go under 0\n    if n\['scroll'].value() < 0:\n        n\['scroll'].setValue(0)\n\n    # do not allow scroll to go over maximum\n    if n\['scroll'].value() > n\['scroll'].max():\n        n\['scroll'].setValue(n\['scroll'].max())\n    \n\n\n# do not allow spread to go under 1\nif n\['spread'].value() < 1:\n    n\['spread'].setValue(1)\n\n\n\nn\['spread'].setEnabled( n\['blend'].value() and n\['method_storage'].value() == 'parallel' )\n\n\n"
 tile_color 0xa50000ff
 label "(iteration: \[value scroll])"
 note_font Verdana
 note_font_color 0xffffffff
 selected true
 xpos 6
 ypos -913
 lifetimeStart 1
 lifetimeEnd 300
 mapsize {0.1540511727 0.174929841}
 addUserKnob {20 Loop}
 addUserKnob {26 ""}
 addUserKnob {6 relinkextinputs l "relink external inputs" t "relink nodes that are not in the loop via extra inputs in the Loop_End group" +STARTLINE}
 relinkextinputs true
 addUserKnob {6 relinkextexpressions l "relink external expressions" t "attempt to fix expressions when they're moved to the Loop_End group by:\n\n   changing 'parent.' to 'root.' when the nodes they refer to are not in the loop\n \n   adding 'root.' in expressions before nodes that are not within the loop\n\nchanges are only made to nodes in the loop itself, and they will be printed in the script editor panel" +STARTLINE}
 relinkextexpressions true
 addUserKnob {6 removeexprparent l "remove 'parent.'" t "automatically removes the 'parent.'-part for all expressions on nodes in the backdrop, which often fixes common relinking issues\n\nmake a copy of the nodes in the backdrop before setting the loop with this enabled, as it permanently alters the expressions on knobs\n\nall changes will be printed in the script editor panel" -STARTLINE}
 addUserKnob {6 loopcountreference l "add loop count knob" t "add a knob called 'loopcount' to all nodes in the loop, with an integer value representing their looping index\n\nthe original nodes (the ones in the backdrop in the main graph) will also get this knob" +STARTLINE}
 addUserKnob {26 empty0 l "" +STARTLINE T " "}
 addUserKnob {3 loops t "amount of loops to create"}
 loops 100
 addUserKnob {4 method t "'sequential' loops like an iterator, 'parallel' creates multiple instances of the same input and merges them together" -STARTLINE M {sequential parallel}}
 addUserKnob {26 method_storage l INVISIBLE t "method_storage is used for remembering when to enable and disable the right knobs" -STARTLINE +INVISIBLE T sequential}
 addUserKnob {26 ""}
 addUserKnob {26 empty1 l "" +STARTLINE T " "}
 addUserKnob {22 set t "bake the loop (or clear it when it is empty)" T "import SetLoop\nSetLoop.set( nuke.thisNode() )" +STARTLINE}
 addUserKnob {26 stats l "" t "current stats" -STARTLINE T "method:\t\tsequential\nnodes in total:\t204\nnodes per loop:\t2\nloops:\t\t100"}
 addUserKnob {26 empty2 l "" +STARTLINE T " "}
 addUserKnob {26 ""}
 addUserKnob {7 scroll t "animate the loop level" R 0 100}
 scroll 100
 addUserKnob {6 invert t "invert the direction of the scroll\n\n- only available with method 'parallel'" -STARTLINE +DISABLED}
 addUserKnob {6 blend t "blends the loop levels when scroll is not a round number" +STARTLINE}
 addUserKnob {7 spread t "feather the loop levels\n\n- only available with method 'parallel' and 'blend' enabled" -STARTLINE +DISABLED R 1 250}
 spread 1
 addUserKnob {26 empty3 l "" +STARTLINE T " "}
 addUserKnob {4 parallelOperation l operation t "the merge operation to use\n\n- only available with method 'parallel'" +DISABLED M {atop average color-burn color-dodge conjoint-over copy difference disjoint-over divide exclusion from geometric hard-light hypot in mask matte max min minus multiply out over overlay plus screen soft-light stencil under xor "" "" "" "" "" "" ""}}
 parallelOperation over
 addUserKnob {26 empty4 l "" +STARTLINE T " "}
 addUserKnob {3 offset t "offset the loop count knob value\n\n- only available when 'add loop count knob' is enabled and set" +DISABLED}
 addUserKnob {26 ""}
 addUserKnob {26 empty5 l "" +STARTLINE T " "}
 addUserKnob {26 version l "" +STARTLINE T "SetLoop 1.7"}
 addUserKnob {26 me l "" +STARTLINE T "Max van Leeuwen"}
 addUserKnob {26 website l "" t "see my website for examples/tutorials" +STARTLINE T "<a href=\"https://www.maxvanleeuwen.com/setloop\"><font color=\"#b2b2b2\">maxvanleeuwen.com/setloop</font></a>"}
 addUserKnob {20 Constants}
 addUserKnob {26 knobs_explained l "" +STARTLINE T "This is an example given of an animated, looping Julia Set on Wikipedia:\n\nz^2 + 0.7885e^ia\n\n\nWhere 'a' is a real number.\n\nI have rebuilt this in this loop, and the variables can be changed down below.\nBy default, the value 'a' is cycling through 0-2PI, like the example on Wikipedia."}
 addUserKnob {26 ""}
 addUserKnob {7 a_value R 0 10}
 a_value {{"(frame/220) % 2*PI"}}
 addUserKnob {7 constant R 0 10}
 constant 0.7885
}
 Input {
  inputs 0
  name Input1
  xpos -40
  ypos -10
 }
 Dot {
  name LoopAnchor_0
  xpos -6
  ypos 16
 }
set Nd15fd800 [stack 0]
push $Nd15fd800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet
  xpos -40
  ypos 34
 }
 Dot {
  name LoopAnchor_1
  xpos -6
  ypos 60
 }
set Nd15fd000 [stack 0]
push $Nd15fd000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet1
  xpos -40
  ypos 78
 }
 Dot {
  name LoopAnchor_2
  xpos -6
  ypos 104
 }
set Nd15fc800 [stack 0]
push $Nd15fc800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet2
  xpos -40
  ypos 122
 }
 Dot {
  name LoopAnchor_3
  xpos -6
  ypos 148
 }
set Nd15fc000 [stack 0]
push $Nd15fc000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet3
  xpos -40
  ypos 166
 }
 Dot {
  name LoopAnchor_4
  xpos -6
  ypos 192
 }
set Nd1623800 [stack 0]
push $Nd1623800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet4
  xpos -40
  ypos 210
 }
 Dot {
  name LoopAnchor_5
  xpos -6
  ypos 236
 }
set Nd1623000 [stack 0]
push $Nd1623000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet5
  xpos -40
  ypos 254
 }
 Dot {
  name LoopAnchor_6
  xpos -6
  ypos 280
 }
set Nd1622800 [stack 0]
push $Nd1622800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet6
  xpos -40
  ypos 298
 }
 Dot {
  name LoopAnchor_7
  xpos -6
  ypos 324
 }
set Nd1622000 [stack 0]
push $Nd1622000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet7
  xpos -40
  ypos 342
 }
 Dot {
  name LoopAnchor_8
  xpos -6
  ypos 368
 }
set Nd1653800 [stack 0]
push $Nd1653800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet8
  xpos -40
  ypos 386
 }
 Dot {
  name LoopAnchor_9
  xpos -6
  ypos 412
 }
set Nd1653000 [stack 0]
push $Nd1653000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet9
  xpos -40
  ypos 430
 }
 Dot {
  name LoopAnchor_10
  xpos -6
  ypos 456
 }
set Nd1652800 [stack 0]
push $Nd1652800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet10
  xpos -40
  ypos 474
 }
 Dot {
  name LoopAnchor_11
  xpos -6
  ypos 500
 }
set Nd1652000 [stack 0]
push $Nd1652000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet11
  xpos -40
  ypos 518
 }
 Dot {
  name LoopAnchor_12
  xpos -6
  ypos 544
 }
set Nd167b800 [stack 0]
push $Nd167b800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet12
  xpos -40
  ypos 562
 }
 Dot {
  name LoopAnchor_13
  xpos -6
  ypos 588
 }
set Nd167b000 [stack 0]
push $Nd167b000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet13
  xpos -40
  ypos 606
 }
 Dot {
  name LoopAnchor_14
  xpos -6
  ypos 632
 }
set Nd167a800 [stack 0]
push $Nd167a800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet14
  xpos -40
  ypos 650
 }
 Dot {
  name LoopAnchor_15
  xpos -6
  ypos 676
 }
set Nd167a000 [stack 0]
push $Nd167a000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet15
  xpos -40
  ypos 694
 }
 Dot {
  name LoopAnchor_16
  xpos -6
  ypos 720
 }
set Nd16a7800 [stack 0]
push $Nd16a7800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet16
  xpos -40
  ypos 738
 }
 Dot {
  name LoopAnchor_17
  xpos -6
  ypos 764
 }
set Nd16a7000 [stack 0]
push $Nd16a7000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet17
  xpos -40
  ypos 782
 }
 Dot {
  name LoopAnchor_18
  xpos -6
  ypos 808
 }
set Nd16a6800 [stack 0]
push $Nd16a6800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet18
  xpos -40
  ypos 826
 }
 Dot {
  name LoopAnchor_19
  xpos -6
  ypos 852
 }
set Nd16a6000 [stack 0]
push $Nd16a6000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet19
  xpos -40
  ypos 870
 }
 Dot {
  name LoopAnchor_20
  xpos -6
  ypos 896
 }
set Nd16d7800 [stack 0]
push $Nd16d7800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet20
  xpos -40
  ypos 914
 }
 Dot {
  name LoopAnchor_21
  xpos -6
  ypos 940
 }
set Nd16d7000 [stack 0]
push $Nd16d7000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet21
  xpos -40
  ypos 958
 }
 Dot {
  name LoopAnchor_22
  xpos -6
  ypos 984
 }
set Nd16d6800 [stack 0]
push $Nd16d6800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet22
  xpos -40
  ypos 1002
 }
 Dot {
  name LoopAnchor_23
  xpos -6
  ypos 1028
 }
set Nd16d6000 [stack 0]
push $Nd16d6000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet23
  xpos -40
  ypos 1046
 }
 Dot {
  name LoopAnchor_24
  xpos -6
  ypos 1072
 }
set Nd10e5800 [stack 0]
push $Nd10e5800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet24
  xpos -40
  ypos 1090
 }
 Dot {
  name LoopAnchor_25
  xpos -6
  ypos 1116
 }
set Nd10e5000 [stack 0]
push $Nd10e5000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet25
  xpos -40
  ypos 1134
 }
 Dot {
  name LoopAnchor_26
  xpos -6
  ypos 1160
 }
set Nd10e4800 [stack 0]
push $Nd10e4800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet26
  xpos -40
  ypos 1178
 }
 Dot {
  name LoopAnchor_27
  xpos -6
  ypos 1204
 }
set Nd10e4000 [stack 0]
push $Nd10e4000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet27
  xpos -40
  ypos 1222
 }
 Dot {
  name LoopAnchor_28
  xpos -6
  ypos 1248
 }
set Nd110f800 [stack 0]
push $Nd110f800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet28
  xpos -40
  ypos 1266
 }
 Dot {
  name LoopAnchor_29
  xpos -6
  ypos 1292
 }
set Nd110f000 [stack 0]
push $Nd110f000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet29
  xpos -40
  ypos 1310
 }
 Dot {
  name LoopAnchor_30
  xpos -6
  ypos 1336
 }
set Nd110e800 [stack 0]
push $Nd110e800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet30
  xpos -40
  ypos 1354
 }
 Dot {
  name LoopAnchor_31
  xpos -6
  ypos 1380
 }
set Nd110e000 [stack 0]
push $Nd110e000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet31
  xpos -40
  ypos 1398
 }
 Dot {
  name LoopAnchor_32
  xpos -6
  ypos 1424
 }
set Nd113f800 [stack 0]
push $Nd113f800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet32
  xpos -40
  ypos 1442
 }
 Dot {
  name LoopAnchor_33
  xpos -6
  ypos 1468
 }
set Nd113f000 [stack 0]
push $Nd113f000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet33
  xpos -40
  ypos 1486
 }
 Dot {
  name LoopAnchor_34
  xpos -6
  ypos 1512
 }
set Nd113e800 [stack 0]
push $Nd113e800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet34
  xpos -40
  ypos 1530
 }
 Dot {
  name LoopAnchor_35
  xpos -6
  ypos 1556
 }
set Nd113e000 [stack 0]
push $Nd113e000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet35
  xpos -40
  ypos 1574
 }
 Dot {
  name LoopAnchor_36
  xpos -6
  ypos 1600
 }
set Nd116d800 [stack 0]
push $Nd116d800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet36
  xpos -40
  ypos 1618
 }
 Dot {
  name LoopAnchor_37
  xpos -6
  ypos 1644
 }
set Nd116d000 [stack 0]
push $Nd116d000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet37
  xpos -40
  ypos 1662
 }
 Dot {
  name LoopAnchor_38
  xpos -6
  ypos 1688
 }
set Nd116c800 [stack 0]
push $Nd116c800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet38
  xpos -40
  ypos 1706
 }
 Dot {
  name LoopAnchor_39
  xpos -6
  ypos 1732
 }
set Nd116c000 [stack 0]
push $Nd116c000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet39
  xpos -40
  ypos 1750
 }
 Dot {
  name LoopAnchor_40
  xpos -6
  ypos 1776
 }
set Nd1199800 [stack 0]
push $Nd1199800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet40
  xpos -40
  ypos 1794
 }
 Dot {
  name LoopAnchor_41
  xpos -6
  ypos 1820
 }
set Nd1199000 [stack 0]
push $Nd1199000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet41
  xpos -40
  ypos 1838
 }
 Dot {
  name LoopAnchor_42
  xpos -6
  ypos 1864
 }
set Nd1198800 [stack 0]
push $Nd1198800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet42
  xpos -40
  ypos 1882
 }
 Dot {
  name LoopAnchor_43
  xpos -6
  ypos 1908
 }
set Nd1198000 [stack 0]
push $Nd1198000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet43
  xpos -40
  ypos 1926
 }
 Dot {
  name LoopAnchor_44
  xpos -6
  ypos 1952
 }
set Nd2807800 [stack 0]
push $Nd2807800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet44
  xpos -40
  ypos 1970
 }
 Dot {
  name LoopAnchor_45
  xpos -6
  ypos 1996
 }
set Nd2807000 [stack 0]
push $Nd2807000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet45
  xpos -40
  ypos 2014
 }
 Dot {
  name LoopAnchor_46
  xpos -6
  ypos 2040
 }
set Nd2806800 [stack 0]
push $Nd2806800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet46
  xpos -40
  ypos 2058
 }
 Dot {
  name LoopAnchor_47
  xpos -6
  ypos 2084
 }
set Nd2806000 [stack 0]
push $Nd2806000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet47
  xpos -40
  ypos 2102
 }
 Dot {
  name LoopAnchor_48
  xpos -6
  ypos 2128
 }
set Nd2831800 [stack 0]
push $Nd2831800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet48
  xpos -40
  ypos 2146
 }
 Dot {
  name LoopAnchor_49
  xpos -6
  ypos 2172
 }
set Nd2831000 [stack 0]
push $Nd2831000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet49
  xpos -40
  ypos 2190
 }
 Dot {
  name LoopAnchor_50
  xpos -6
  ypos 2216
 }
set Nd2830800 [stack 0]
push $Nd2830800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet50
  xpos -40
  ypos 2234
 }
 Dot {
  name LoopAnchor_51
  xpos -6
  ypos 2260
 }
set Nd2830000 [stack 0]
push $Nd2830000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet51
  xpos -40
  ypos 2278
 }
 Dot {
  name LoopAnchor_52
  xpos -6
  ypos 2304
 }
set Nd2861800 [stack 0]
push $Nd2861800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet52
  xpos -40
  ypos 2322
 }
 Dot {
  name LoopAnchor_53
  xpos -6
  ypos 2348
 }
set Nd2861000 [stack 0]
push $Nd2861000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet53
  xpos -40
  ypos 2366
 }
 Dot {
  name LoopAnchor_54
  xpos -6
  ypos 2392
 }
set Nd2860800 [stack 0]
push $Nd2860800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet54
  xpos -40
  ypos 2410
 }
 Dot {
  name LoopAnchor_55
  xpos -6
  ypos 2436
 }
set Nd2860000 [stack 0]
push $Nd2860000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet55
  xpos -40
  ypos 2454
 }
 Dot {
  name LoopAnchor_56
  xpos -6
  ypos 2480
 }
set Nd288d800 [stack 0]
push $Nd288d800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet56
  xpos -40
  ypos 2498
 }
 Dot {
  name LoopAnchor_57
  xpos -6
  ypos 2524
 }
set Nd288d000 [stack 0]
push $Nd288d000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet57
  xpos -40
  ypos 2542
 }
 Dot {
  name LoopAnchor_58
  xpos -6
  ypos 2568
 }
set Nd288c800 [stack 0]
push $Nd288c800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet58
  xpos -40
  ypos 2586
 }
 Dot {
  name LoopAnchor_59
  xpos -6
  ypos 2612
 }
set Nd288c000 [stack 0]
push $Nd288c000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet59
  xpos -40
  ypos 2630
 }
 Dot {
  name LoopAnchor_60
  xpos -6
  ypos 2656
 }
set Nd28bb800 [stack 0]
push $Nd28bb800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet60
  xpos -40
  ypos 2674
 }
 Dot {
  name LoopAnchor_61
  xpos -6
  ypos 2700
 }
set Nd28bb000 [stack 0]
push $Nd28bb000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet61
  xpos -40
  ypos 2718
 }
 Dot {
  name LoopAnchor_62
  xpos -6
  ypos 2744
 }
set Nd28ba800 [stack 0]
push $Nd28ba800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet62
  xpos -40
  ypos 2762
 }
 Dot {
  name LoopAnchor_63
  xpos -6
  ypos 2788
 }
set Nd28ba000 [stack 0]
push $Nd28ba000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet63
  xpos -40
  ypos 2806
 }
 Dot {
  name LoopAnchor_64
  xpos -6
  ypos 2832
 }
set Nd28e7800 [stack 0]
push $Nd28e7800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet64
  xpos -40
  ypos 2850
 }
 Dot {
  name LoopAnchor_65
  xpos -6
  ypos 2876
 }
set Nd28e7000 [stack 0]
push $Nd28e7000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet65
  xpos -40
  ypos 2894
 }
 Dot {
  name LoopAnchor_66
  xpos -6
  ypos 2920
 }
set Nd28e6800 [stack 0]
push $Nd28e6800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet66
  xpos -40
  ypos 2938
 }
 Dot {
  name LoopAnchor_67
  xpos -6
  ypos 2964
 }
set Nd28e6000 [stack 0]
push $Nd28e6000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet67
  xpos -40
  ypos 2982
 }
 Dot {
  name LoopAnchor_68
  xpos -6
  ypos 3008
 }
set Nd2917800 [stack 0]
push $Nd2917800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet68
  xpos -40
  ypos 3026
 }
 Dot {
  name LoopAnchor_69
  xpos -6
  ypos 3052
 }
set Nd2917000 [stack 0]
push $Nd2917000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet69
  xpos -40
  ypos 3070
 }
 Dot {
  name LoopAnchor_70
  xpos -6
  ypos 3096
 }
set Nd2916800 [stack 0]
push $Nd2916800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet70
  xpos -40
  ypos 3114
 }
 Dot {
  name LoopAnchor_71
  xpos -6
  ypos 3140
 }
set Nd2916000 [stack 0]
push $Nd2916000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet71
  xpos -40
  ypos 3158
 }
 Dot {
  name LoopAnchor_72
  xpos -6
  ypos 3184
 }
set Nd2943800 [stack 0]
push $Nd2943800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet72
  xpos -40
  ypos 3202
 }
 Dot {
  name LoopAnchor_73
  xpos -6
  ypos 3228
 }
set Nd2943000 [stack 0]
push $Nd2943000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet73
  xpos -40
  ypos 3246
 }
 Dot {
  name LoopAnchor_74
  xpos -6
  ypos 3272
 }
set Nd2942800 [stack 0]
push $Nd2942800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet74
  xpos -40
  ypos 3290
 }
 Dot {
  name LoopAnchor_75
  xpos -6
  ypos 3316
 }
set Nd2942000 [stack 0]
push $Nd2942000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet75
  xpos -40
  ypos 3334
 }
 Dot {
  name LoopAnchor_76
  xpos -6
  ypos 3360
 }
set Nd296f800 [stack 0]
push $Nd296f800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet76
  xpos -40
  ypos 3378
 }
 Dot {
  name LoopAnchor_77
  xpos -6
  ypos 3404
 }
set Nd296f000 [stack 0]
push $Nd296f000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet77
  xpos -40
  ypos 3422
 }
 Dot {
  name LoopAnchor_78
  xpos -6
  ypos 3448
 }
set Nd296e800 [stack 0]
push $Nd296e800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet78
  xpos -40
  ypos 3466
 }
 Dot {
  name LoopAnchor_79
  xpos -6
  ypos 3492
 }
set Nd296e000 [stack 0]
push $Nd296e000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet79
  xpos -40
  ypos 3510
 }
 Dot {
  name LoopAnchor_80
  xpos -6
  ypos 3536
 }
set Nd299d800 [stack 0]
push $Nd299d800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet80
  xpos -40
  ypos 3554
 }
 Dot {
  name LoopAnchor_81
  xpos -6
  ypos 3580
 }
set Nd299d000 [stack 0]
push $Nd299d000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet81
  xpos -40
  ypos 3598
 }
 Dot {
  name LoopAnchor_82
  xpos -6
  ypos 3624
 }
set Nd299c800 [stack 0]
push $Nd299c800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet82
  xpos -40
  ypos 3642
 }
 Dot {
  name LoopAnchor_83
  xpos -6
  ypos 3668
 }
set Nd299c000 [stack 0]
push $Nd299c000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet83
  xpos -40
  ypos 3686
 }
 Dot {
  name LoopAnchor_84
  xpos -6
  ypos 3712
 }
set Nd29c7800 [stack 0]
push $Nd29c7800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet84
  xpos -40
  ypos 3730
 }
 Dot {
  name LoopAnchor_85
  xpos -6
  ypos 3756
 }
set Nd29c7000 [stack 0]
push $Nd29c7000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet85
  xpos -40
  ypos 3774
 }
 Dot {
  name LoopAnchor_86
  xpos -6
  ypos 3800
 }
set Nd29c6800 [stack 0]
push $Nd29c6800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet86
  xpos -40
  ypos 3818
 }
 Dot {
  name LoopAnchor_87
  xpos -6
  ypos 3844
 }
set Nd29c6000 [stack 0]
push $Nd29c6000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet87
  xpos -40
  ypos 3862
 }
 Dot {
  name LoopAnchor_88
  xpos -6
  ypos 3888
 }
set Nd29f7800 [stack 0]
push $Nd29f7800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet88
  xpos -40
  ypos 3906
 }
 Dot {
  name LoopAnchor_89
  xpos -6
  ypos 3932
 }
set Nd29f7000 [stack 0]
push $Nd29f7000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet89
  xpos -40
  ypos 3950
 }
 Dot {
  name LoopAnchor_90
  xpos -6
  ypos 3976
 }
set Nd29f6800 [stack 0]
push $Nd29f6800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet90
  xpos -40
  ypos 3994
 }
 Dot {
  name LoopAnchor_91
  xpos -6
  ypos 4020
 }
set Nd29f6000 [stack 0]
push $Nd29f6000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet91
  xpos -40
  ypos 4038
 }
 Dot {
  name LoopAnchor_92
  xpos -6
  ypos 4064
 }
set Nd2a25800 [stack 0]
push $Nd2a25800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet92
  xpos -40
  ypos 4082
 }
 Dot {
  name LoopAnchor_93
  xpos -6
  ypos 4108
 }
set Nd2a25000 [stack 0]
push $Nd2a25000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet93
  xpos -40
  ypos 4126
 }
 Dot {
  name LoopAnchor_94
  xpos -6
  ypos 4152
 }
set Nd2a24800 [stack 0]
push $Nd2a24800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet94
  xpos -40
  ypos 4170
 }
 Dot {
  name LoopAnchor_95
  xpos -6
  ypos 4196
 }
set Nd2a24000 [stack 0]
push $Nd2a24000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet95
  xpos -40
  ypos 4214
 }
 Dot {
  name LoopAnchor_96
  xpos -6
  ypos 4240
 }
set Nd2a53800 [stack 0]
push $Nd2a53800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet96
  xpos -40
  ypos 4258
 }
 Dot {
  name LoopAnchor_97
  xpos -6
  ypos 4284
 }
set Nd2a53000 [stack 0]
push $Nd2a53000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet97
  xpos -40
  ypos 4302
 }
 Dot {
  name LoopAnchor_98
  xpos -6
  ypos 4328
 }
set Nd2a52800 [stack 0]
push 0
push $Nd2a52800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet98
  xpos -40
  ypos 4346
 }
 Dot {
  name LoopAnchor_99
  xpos -6
  ypos 4372
 }
set Nd2a52000 [stack 0]
push $Nd2a52000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 Loop_End.constant
  temp_name2 a_value
  temp_expr2 Loop_End.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(Loop_End.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet99
  selected true
  xpos -40
  ypos 4390
 }
 Dot {
  name LoopAnchor_100
  selected true
 }
 Dissolve {
  inputs 101+1
  which {{"parent.loops - (parent.blend ? parent.scroll : floor(parent.scroll))"}}
  name Dissolve1
 }
 Output {
  name Output1
 }
end_group
Dot {
 name Dot16
 selected true
 xpos 40
 ypos -138
}
set Nc2f9d400 [stack 0]
Dot {
 name Dot17
 selected true
 xpos 40
 ypos 120
}
push $Nc2f9d400
Dot {
 name Dot18
 selected true
 xpos -90
 ypos -138
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle_AlphaToRGB
 selected true
 xpos -124
 ypos -66
}
Group {
 inputs 0
 name GradientEditor1
 tile_color 0x4b19ffff
 selected true
 xpos -436
 ypos -136
 addUserKnob {20 User l Gradient}
 addUserKnob {26 headline l "" +STARTLINE T "<font size=\"6\">GradientEditor</font><font size=\"4\">v0.9</font>\n"}
 addUserKnob {26 headline2 l "" +STARTLINE T "by Mads Hagbarth Damsbo - 2016"}
 addUserKnob {26 devider_header l "<b><font color=#00E0E0>INPUT MAPPING</font><b>"}
 addUserKnob {4 Type M {Input Generator}}
 Type Generator
 addUserKnob {4 sample_type l Sample -STARTLINE M {Magnitude Maximum Average Red Green Blue Alpha "" "" ""}}
 sample_type Average
 addUserKnob {41 in l From -STARTLINE T Shuffle1.in}
 addUserKnob {6 Invert l Reverse -STARTLINE}
 addUserKnob {26 deviderMain l "<b><font color=#00E0E0>GRADIENT</font><b>"}
 addUserKnob {52 ui l "" +STARTLINE T ColorGradientUi.ColorWheelKnob_GRADIENT() +STARTLINE}
 addUserKnob {7 input_valueLow l Interval R -1 1}
 addUserKnob {4 lowCont l "" -STARTLINE M {Hold Loop Bounce}}
 lowCont Bounce
 addUserKnob {7 input_valueHigh l "" -STARTLINE R 0 2}
 input_valueHigh 1
 addUserKnob {4 highCont l "" -STARTLINE M {Hold Loop Bounce ""}}
 highCont Bounce
 addUserKnob {4 Interpolation l INVISIBLE +INVISIBLE M {Constant Linear Smooth Catmull-Rom Cubic Horizontal ""}}
 Interpolation Catmull-Rom
 addUserKnob {6 PreserceLuma l "Preserve Luma" +STARTLINE}
 addUserKnob {26 devider_phasing l "<b><font color=#00E0E0>PHASING</font><b>"}
 addUserKnob {7 Phase R 0 10}
 addUserKnob {7 Frequency R 0 10}
 Frequency 1
 addUserKnob {26 devider_Input l "<b><font color=#00E0E0>PREMULT</font><b>"}
 addUserKnob {41 colorspace_in l " colorspace " T Colorspace2.colorspace_in}
 addUserKnob {41 alpha l "Unpremult by" T Unpremult1.alpha}
 addUserKnob {6 Premult -STARTLINE}
 addUserKnob {20 responsecurve_tab l "Response Curve"}
 addUserKnob {26 CurveInfo l "" +STARTLINE T "Use the master curve to control the response curve"}
 addUserKnob {26 ""}
 addUserKnob {41 lut l "" +STARTLINE T ColorLookup2.lut}
}
 Input {
  inputs 0
  name Input1
  xpos -3
  ypos -76
 }
set Nc2f9c400 [stack 0]
 Dot {
  name Dot1
  xpos 351
  ypos -73
 }
 Dot {
  name Dot2
  xpos 351
  ypos 642
 }
push $Nc2f9c400
 Expression {
  expr0 x/width
  expr1 x/width
  expr2 x/width
  expr3 1
  name Expression1
  xpos 114
  ypos -25
 }
push $Nc2f9c400
 Shuffle {
  name Shuffle1
  xpos -3
  ypos -43
 }
 Unpremult {
  alpha -rgba.alpha
  name Unpremult1
  xpos -3
  ypos -19
 }
 Switch {
  inputs 2
  which {{parent.Type}}
  name Switch1
  xpos -3
  ypos 20
 }
set Nc2fd2c00 [stack 0]
 Dot {
  name Dot3
  xpos -225
  ypos 88
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace1
  xpos -467
  ypos 135
 }
push $Nc2fd2c00
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle5
  xpos 260
  ypos 149
 }
push $Nc2fd2c00
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle4
  xpos 174
  ypos 150
 }
push $Nc2fd2c00
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle3
  xpos 85
  ypos 148
 }
push $Nc2fd2c00
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle2
  selected true
  xpos -3
  ypos 148
 }
push $Nc2fd2c00
 Saturation {
  saturation 0
  mode Average
  name Saturation2
  xpos -113
  ypos 145
 }
push $Nc2fd2c00
 Saturation {
  saturation 0
  mode Maximum
  name Saturation1
  xpos -232
  ypos 147
 }
push $Nc2fd2c00
 Expression {
  temp_name3 VectorLength_3D
  temp_expr3 sqrt(Red*Red+Green*Green+Blue*Blue)
  expr0 VectorLength_3D
  expr1 VectorLength_3D
  expr2 VectorLength_3D
  name Vector_Length3D
  xpos -336
  ypos 148
 }
 Switch {
  inputs 7
  which {{parent.sample_type}}
  name Switch3
  xpos -3
  ypos 367
 }
 Grade {
  blackpoint {{parent.input_valueLow}}
  whitepoint {{parent.input_valueHigh}}
  multiply {{parent.Frequency}}
  add {{parent.Phase}}
  black_clamp false
  name Grade1
  xpos -3
  ypos 391
 }
 Invert {
  name Invert1
  xpos -3
  ypos 415
  disable {{!parent.Invert}}
 }
 Expression {
  temp_name0 antR
  temp_expr0 (floor(r/2)-(floor((r+1)/2)-1))
  temp_name1 antG
  temp_expr1 (floor(g/2)-(floor((g+1)/2)-1))
  temp_name2 antB
  temp_expr2 (floor(b/2)-(floor((b+1)/2)-1))
  expr0 r<=parent.input_valueLow?parent.lowCont==0?r:parent.lowCont==1?r-floor(r):((1-(r-floor(r)))*(1-antR))+(((r-floor(r)))*(antR)):parent.highCont==0?r:parent.highCont==1?r-floor(r):((1-(r-floor(r)))*(1-antR))+(((r-floor(r)))*(antR))
  expr1 g<=parent.input_valueLow?parent.lowCont==0?g:parent.lowCont==1?g-floor(g):((1-(g-floor(g)))*(1-antG))+(((g-floor(g)))*(antG)):parent.highCont==0?g:parent.highCont==1?g-floor(g):((1-(g-floor(g)))*(1-antG))+(((g-floor(g)))*(antG))
  expr2 b<=parent.input_valueLow?parent.lowCont==0?b:parent.lowCont==1?b-floor(b):((1-(b-floor(b)))*(1-antB))+(((b-floor(b)))*(antB)):parent.highCont==0?b:parent.highCont==1?b-floor(b):((1-(b-floor(b)))*(1-antB))+(((b-floor(b)))*(antB))
  name Expression2
  xpos -3
  ypos 491
 }
 ColorLookup {
  lut {master {curve 0 1}
    red {}
    green {}
    blue {}
    alpha {}}
  name ColorLookup2
  xpos -3
  ypos 562
 }
 ColorLookup {
  lut {master {}
    red {curve R 0.3765011063 x0.08351177722 0.09945830472 x0.1311787069 1 x0.180608362 1 x0.3688212931 1 x0.6140684485 0 L x1 0}
    green {curve R 0 x0.08351177722 0.8745098039 x0.1311787069 0.8980544747 x0.180608362 0.5474784466 x0.3688212931 0 x0.6140684485 0.988174258 L x1 0}
    blue {curve R 1 x0.08351177722 0.7742732891 x0.1311787069 0.2117647059 x0.180608362 0.1450980392 x0.3688212931 0 x0.6140684485 1 L x1 0}
    alpha {curve R 1 x0.08351177722 1 x0.1311787069 1 x0.180608362 1 x0.3688212931 1 x0.6140684485 1 L x1 1}}
  name ColorLookup1
  xpos -2
  ypos 586
  addUserKnob {20 User}
  addUserKnob {22 chek +STARTLINE}
 }
 Colorspace {
  colorspace_in sRGB
  name Colorspace2
  xpos -2
  ypos 669
 }
set Nc303ac00 [stack 0]
 Colorspace {
  colorspace_out YCbCr
  name Colorspace8
  xpos -334
  ypos 669
 }
 ShuffleCopy {
  inputs 2
  red red
  name ShuffleCopy2
  xpos -467
  ypos 669
 }
 Colorspace {
  colorspace_in YCbCr
  name Colorspace9
  xpos -467
  ypos 708
 }
push $Nc303ac00
 Switch {
  inputs 2
  which {{parent.PreserceLuma}}
  name Switch2
  xpos -2
  ypos 708
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy1
  xpos -2
  ypos 788
 }
 Premult {
  name Premult1
  xpos -2
  ypos 812
  disable {{!parent.Premult}}
 }
 Output {
  name Output1
  xpos -2
  ypos 866
 }
end_group
Saturation {
 saturation 1.6
 name Saturation1
 selected true
 xpos -436
 ypos -110
}
Clamp {
 channels rgb
 name Clamp1
 selected true
 xpos -436
 ypos -46
}
Dot {
 name Dot3
 note_font_size 30
 selected true
 xpos -402
 ypos 28
}
STMap {
 inputs 2
 channels rgb
 uv rgb
 name STMap1
 selected true
 xpos -124
 ypos 25
}
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy1
 selected true
 xpos -124
 ypos 109
}
Dot {
 name Dot15
 selected true
 xpos -90
 ypos 514
}
set Nc30a7800 [stack 0]
Dot {
 name Dot19
 selected true
 xpos -450
 ypos 514
}
Expression {
 expr3 "a > .99"
 name Expression_FillOnly
 selected true
 xpos -484
 ypos 872
}
Dot {
 name Dot20
 selected true
 xpos -450
 ypos 2503
}
Noise {
 inputs 0
 size 2.5
 zoffset {{frame/20}}
 center {512 512}
 name Noise1
 selected true
 xpos 35
 ypos 1491
}
Grade {
 blackpoint 0.74
 white 2.5
 name Grade3
 selected true
 xpos 35
 ypos 1578
}
TimeEcho {
 mode Average
 framesbehind 20
 frmaesfade 0
 name TimeEcho1
 selected true
 xpos 35
 ypos 1604
}
Dot {
 name Dot21
 selected true
 xpos 69
 ypos 1677
}
set Nc3163c00 [stack 0]
Dot {
 name Dot22
 selected true
 xpos 259
 ypos 1677
}
Transform {
 scale 1.008
 center {512 512}
 name Transform1
 selected true
 xpos 225
 ypos 1712
}
Crop {
 box {0 0 1024 1024}
 crop false
 name Crop1
 selected true
 xpos 225
 ypos 1738
}
Dot {
 name Dot23
 selected true
 xpos 259
 ypos 1809
}
push $Nc3163c00
ShuffleCopy {
 inputs 2
 red red
 alpha white
 name ShuffleCopy1
 selected true
 xpos 35
 ypos 1805
}
Dot {
 name Dot25
 selected true
 xpos 69
 ypos 2148
}
set Nc3162400 [stack 0]
Dot {
 name Dot26
 selected true
 xpos 259
 ypos 2148
}
TimeOffset {
 time_offset 439
 time ""
 name TimeOffset1
 selected true
 xpos 225
 ypos 2182
}
Dot {
 name Dot27
 selected true
 xpos 259
 ypos 2223
}
push $Nc3162400
Dissolve {
 inputs 2
 which {{curve x339 0 s0 x439 1 s0}}
 name Dissolve1
 selected true
 xpos 35
 ypos 2212
}
Dot {
 name Dot14
 selected true
 xpos 69
 ypos 2503
}
push $Nc30a7800
Dot {
 name Dot6
 selected true
 xpos -90
 ypos 763
}
set Nc318b000 [stack 0]
Camera2 {
 inputs 0
 translate {0 0 0.5500000119}
 name Camera1
 selected true
 xpos -234
 ypos 982
}
Light2 {
 inputs 0
 intensity 7
 translate {0.5 0.5 1.6}
 depthmap_slope_bias 0.01
 name Light1
 selected true
 xpos -231
 ypos 872
}
push $Nc318b000
Dot {
 name Dot11
 selected true
 xpos 55
 ypos 763
}
set Nc318a400 [stack 0]
Dot {
 name Dot8
 selected true
 xpos 213
 ypos 763
}
set Nc318a000 [stack 0]
Dot {
 name Dot2
 selected true
 xpos 439
 ypos 763
}
set Nc31c5c00 [stack 0]
Matrix {
 matrix {
     {2 0 -2}
     {1 0 -1}
     {2 0 -2}
   }
 name Matrix1
 selected true
 xpos 405
 ypos 830
}
push $Nc31c5c00
Dot {
 name Dot4
 selected true
 xpos 562
 ypos 763
}
Matrix {
 matrix {
     {-2 -1 -2}
     {0 0 0}
     {2 1 2}
   }
 name Matrix2
 selected true
 xpos 528
 ypos 830
}
Dot {
 name Dot7
 selected true
 xpos 562
 ypos 903
}
ShuffleCopy {
 inputs 2
 red red
 blue white
 alpha black
 name ShuffleCopy_Sobel
 selected true
 xpos 405
 ypos 899
}
Grade {
 multiply 2.55
 name Grade1
 selected true
 xpos 405
 ypos 925
}
Dot {
 name Dot12
 selected true
 xpos 439
 ypos 968
}
push $Nc318a000
Expression {
 expr0 (x+.5)/width
 expr1 (y+.5)/height
 expr2 1
 name Expression1
 selected true
 xpos 179
 ypos 883
}
Dot {
 name Dot13
 selected true
 xpos 213
 ypos 923
}
push $Nc318a400
add_layer {position position.r position.g position.b}
ShuffleCopy {
 inputs 2
 alpha white
 black red
 white green
 red2 blue
 out2 position
 name ShuffleCopy_Position
 selected true
 xpos 21
 ypos 919
}
add_layer {normal normal.r normal.g normal.b}
ShuffleCopy {
 inputs 2
 alpha white
 black red
 white green
 red2 white
 out2 normal
 name ShuffleCopy_NormalMap
 selected true
 xpos 21
 ypos 964
}
Dot {
 name Dot24
 selected true
 xpos 55
 ypos 1006
}
ReLight {
 inputs 4
 normal normal
 position position
 name ReLight1
 selected true
 xpos -124
 ypos 1002
}
Merge2 {
 inputs 2+1
 operation plus
 output {rgba.red rgba.green rgba.blue -rgba.alpha}
 name Merge1
 selected true
 xpos -124
 ypos 2499
}
Dot {
 name Dot5
 label "Julia set animated"
 note_font_size 30
 selected true
 xpos -90
 ypos 2863
}
