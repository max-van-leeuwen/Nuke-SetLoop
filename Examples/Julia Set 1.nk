set cut_paste_input [stack 0]
BackdropNode {
 inputs 0
 name BackdropNode3
 tile_color 0x464646ff
 label relighting
 note_font_size 42
 selected true
 xpos -272
 ypos -742
 bdwidth 903
 bdheight 449
 z_order -1
}
BackdropNode {
 inputs 0
 name BackdropNode1
 tile_color 0x464646ff
 label colours
 note_font_size 42
 selected true
 xpos -503
 ypos -1710
 bdwidth 585
 bdheight 547
}
BackdropNode {
 inputs 0
 name BackdropNode2
 tile_color 0x313131ff
 label "generate normals"
 note_font_size 42
 selected true
 xpos 398
 ypos -662
 bdwidth 223
 bdheight 313
}
BackdropNode {
 inputs 0
 name BackdropNode4
 tile_color 0x464646ff
 label "loop 1-439"
 note_font_size 42
 selected true
 xpos 28
 ypos 723
 bdwidth 290
 bdheight 188
}
BackdropNode {
 inputs 0
 name BackdropNode5
 tile_color 0x464646ff
 label stars
 note_font_size 42
 selected true
 xpos 28
 ypos 66
 bdwidth 290
 bdheight 424
}
BackdropNode {
 inputs 0
 name SetLoop
 tile_color 0x1c1c1cff
 gl_color 0xafaf64ff
 label <center>SetLoop
 note_font "Verdana Italic Italic Italic Italic"
 note_font_color 0x626262ff
 selected true
 xpos -93
 ypos -2723
 bdwidth 293
 bdheight 523
 z_order 1
 addUserKnob {20 Loop}
 addUserKnob {26 SetLoop_bd l "" +STARTLINE T "Keep the loop within this backdrop!\nResize the backdrop if necessary.\nGo to EndLoop for configuration."}
}
StickyNote {
 inputs 0
 name StickyNote2
 label "GradientEditor by Mads Hagbarth Damsbo\n\ndownload from NukePedia to have full functionality,\nit makes gradients easy to make\n\n|\nV"
 selected true
 xpos -493
 ypos -1630
}
Expression {
 inputs 0
 temp_name0 aspect
 temp_expr0 height/width
 channel0 {rgba.red -rgba.green -rgba.blue none}
 expr0 "((x / aspect * xsize) / width) + (xslide / aspect)"
 expr1 "((y * ysize) / height) + yslide"
 expr2 aspect
 name Expression_UV
 selected true
 xpos 9
 ypos -2992
 addUserKnob {20 User}
 addUserKnob {7 xsize R -3 3}
 xsize 3.5
 addUserKnob {7 ysize R -3 3}
 ysize {{xsize}}
 addUserKnob {7 xslide}
 xslide -1.75
 addUserKnob {7 yslide}
 yslide {{xslide}}
}
Group {
 name StartLoop
 tile_color 0xa50000ff
 note_font "Verdana Italic Italic Italic Italic Italic"
 selected true
 xpos 9
 ypos -2607
 addUserKnob {20 Loop}
 addUserKnob {26 loopbegin l "" +STARTLINE T "go to EndLoop for configuration"}
}
 Read {
  inputs 0
  file_type exr
  localizationPolicy off
  origset true
  raw true
  name FeedbackReader
  tile_color 0xa50000ff
  selected true
  xpos 139
  ypos 139
  postage_stamp false
 }
 Input {
  inputs 0
  name Input1
  xpos 0
 }
 Switch {
  inputs 2
  name FeedbackSwitch
  tile_color 0xa50000ff
  xpos 0
  ypos 146
  addUserKnob {20 SetLoopInfo l Info}
  addUserKnob {26 info l "" +STARTLINE T "when feedback writing is enabled,\nthis switch will be set to 0 on the first iteration \nand to 1 on iterations after that\n\nthe read node on input 1 will be updated to always read the most recent feedback"}
 }
 Output {
  name Output1
  xpos 0
  ypos 300
 }
end_group
Expression {
 temp_name0 valid
 temp_expr0 "hypot(Br, Bg) < 2"
 temp_name1 constant
 temp_expr1 EndLoop.constant
 temp_name2 a_value
 temp_expr2 EndLoop.a_value
 expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
 expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
 expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
 enable_mix_luminance false
 name Expression_JuliaSet
 selected true
 xpos 9
 ypos -2473
}
Group {
 name EndLoop
 knobChanged "import SetLoop\nSetLoop.onKnobChanged(nuke.thisNode(), nuke.thisKnob())"
 tile_color 0xa50000ff
 label "iteration: \[value scroll]"
 note_font Verdana
 note_font_color 0xffffffff
 selected true
 xpos 9
 ypos -2332
 lifetimeStart 1
 lifetimeEnd 300
 mapsize {0.1540511727 0.174929841}
 addUserKnob {20 Loop}
 addUserKnob {26 ""}
 addUserKnob {3 loops t "amount of loops to create"}
 loops 100
 addUserKnob {4 method t "'sequential' loops like an iterator\n\n'parallel' creates multiple instances of the same input and merges them together\n\n'geometry' is like 'parallel' but for geo" -STARTLINE M {sequential parallel geometry}}
 addUserKnob {68 buildMethod l "" t "- in this group node (live)\n\ncopies the nodes to loop over into this group node for a live loop within Nuke\n\n\n- iterations to exr (baked)\n\nkeeps the group empty and writes each iteration as a sequence on top of an exr of the previous one, faster but not live" -STARTLINE M {"in this group node (live)" "iterations to exr (baked)" ""}}
 addUserKnob {26 method_storage l INVISIBLE t "method_storage is used for remembering when to enable and disable the right knobs" -STARTLINE +INVISIBLE T sequential}
 addUserKnob {26 ""}
 addUserKnob {6 relinkextinputs l "relink external inputs" t "relink nodes that are not in the loop via extra inputs in this group node" +STARTLINE}
 relinkextinputs true
 addUserKnob {6 relinkextexpressions l "relink external expressions" t "attempt to fix expressions when they're moved into this group by:\n\n- changing 'parent.' to 'root.' when the nodes they refer to are not in the loop\n \n- adding 'root.' in expressions before nodes that are not within the loop\n\n\nchanges are only made to nodes in the loop itself, and they will be printed in the script editor panel" +STARTLINE}
 relinkextexpressions true
 addUserKnob {6 removeexprparent l "remove 'parent.'" t "automatically removes the 'parent.'-part for all expressions on nodes in the backdrop, which often fixes common relinking issues\n\nmake a copy of the nodes in the backdrop before setting the loop with this enabled, as it permanently alters the expressions on knobs\n\nall changes will be printed in the script editor panel" -STARTLINE}
 addUserKnob {6 addIterationKnob l "add iteration knob" t "add a knob called 'iteration' to all nodes in the loop, with an integer value representing their looping index\n\nthe original nodes (the ones in the backdrop in the main graph) will also get this knob, starting at 0" +STARTLINE}
 addUserKnob {2 dirPath l directory t "path to the directory to store the sequence of iterations in (exr), ending with '/'" +HIDDEN}
 addUserKnob {3 onFrame l frame t "frame to iterate over" +HIDDEN}
 onFrame 1
 addUserKnob {4 datatype t "iterations are written to raw exr" +HIDDEN M {"16 bit half" "32 bit float" ""}}
 addUserKnob {26 ""}
 addUserKnob {26 empty1 l "" +STARTLINE T " "}
 addUserKnob {22 set t "build the loop" T "import SetLoop\nSetLoop.set(nuke.thisNode())" +STARTLINE}
 addUserKnob {26 stats l "" t "current stats" -STARTLINE T "method:\t\tsequential\nnodes in total:\t204\nnodes per loop:\t1\nloops:\t\t100"}
 addUserKnob {3 iteration t "this read-only knob will update to always show the current iteration when writing feedback images to a sequence\n\nreference to this value in expressions using\n'EndLoop.iteration'" +DISABLED +HIDDEN}
 addUserKnob {22 startFeedback l "start feedback write" t "start writing individual iterations to image files" +HIDDEN T "import SetLoop\nSetLoop.startFeedback(nuke.thisNode())" +STARTLINE}
 addUserKnob {22 readFeedback l "read feedback sequence" t "get the feedback sequence" -STARTLINE +HIDDEN T "import SetLoop\nSetLoop.getFeedback(nuke.thisNode())"}
 addUserKnob {26 empty2 l "" +STARTLINE T " "}
 addUserKnob {26 lineScroll l "" +STARTLINE}
 addUserKnob {7 scroll t "animate the loop level" R 0 100}
 scroll 100
 addUserKnob {6 invert t "invert the direction of the scroll\n\n- only available with method 'parallel'" -STARTLINE +DISABLED}
 addUserKnob {6 blend t "blends the loop levels when scroll is not a round number" +STARTLINE}
 addUserKnob {7 spread t "feather the loop levels\n\n- only available with method 'parallel' and 'blend' enabled" -STARTLINE +DISABLED R 1 250}
 spread 1
 addUserKnob {26 empty3 l "" +STARTLINE T " "}
 addUserKnob {4 parallelOperation l operation t "the merge operation to use\n\n- only available with method 'parallel'" +DISABLED M {atop average color-burn color-dodge conjoint-over copy difference disjoint-over divide exclusion from geometric hard-light hypot in mask matte max min minus multiply out over overlay plus screen soft-light stencil under xor "" "" "" "" "" "" ""}}
 parallelOperation over
 addUserKnob {26 empty4 l "" +STARTLINE T " "}
 addUserKnob {7 offset t "offset the iteration knob value on all nodes in the loop\n\n- only available when 'add iteration knob' is enabled" +DISABLED R -10 10}
 addUserKnob {26 ""}
 addUserKnob {26 empty5 l "" +STARTLINE T " "}
 addUserKnob {26 version l "" +STARTLINE T "SetLoop 1.9"}
 addUserKnob {26 me l "" +STARTLINE T "Max van Leeuwen"}
 addUserKnob {26 website l "" t "see my website for examples/tutorials" +STARTLINE T "<a href=\"https://www.maxvanleeuwen.com/setloop\"><font color=\"#b2b2b2\">maxvanleeuwen.com/setloop</font></a>"}
 addUserKnob {20 CustomTab l Custom}
 addUserKnob {26 customInfo l "" +STARTLINE T "This is an example given of an animated, looping Julia Set on Wikipedia:\n\nz^2 + 0.7885e^ia\n\n\nWhere 'a' is a real number.\n\nI have rebuilt this in this loop, and the variables can be changed down below.\nBy default, the value 'a' is cycling through 0-2PI, like the example on Wikipedia."}
 addUserKnob {26 ""}
 addUserKnob {26 empty6 l "" +STARTLINE T " "}
 addUserKnob {7 a_value t "inactive slider you can use in expressions from within the loop" R 0 10}
 a_value {{"(frame/220) % 2*PI"}}
 addUserKnob {7 constant t "inactive slider you can use in expressions from within the loop" R -100 100}
 constant 0.7885
}
 Input {
  inputs 0
  name Input1
  xpos -40
  ypos -10
 }
 Dot {
  name LoopAnchor_0
  xpos -6
  ypos 16
 }
set N35db800 [stack 0]
push $N35db800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet
  xpos -40
  ypos 34
 }
 Dot {
  name LoopAnchor_1
  xpos -6
  ypos 60
 }
set N35db000 [stack 0]
push $N35db000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet1
  xpos -40
  ypos 78
 }
 Dot {
  name LoopAnchor_2
  xpos -6
  ypos 104
 }
set N35da800 [stack 0]
push $N35da800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet2
  xpos -40
  ypos 122
 }
 Dot {
  name LoopAnchor_3
  xpos -6
  ypos 148
 }
set N35da000 [stack 0]
push $N35da000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet3
  xpos -40
  ypos 166
 }
 Dot {
  name LoopAnchor_4
  xpos -6
  ypos 192
 }
set N603d800 [stack 0]
push $N603d800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet4
  xpos -40
  ypos 210
 }
 Dot {
  name LoopAnchor_5
  xpos -6
  ypos 236
 }
set N603d000 [stack 0]
push $N603d000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet5
  xpos -40
  ypos 254
 }
 Dot {
  name LoopAnchor_6
  xpos -6
  ypos 280
 }
set N603c800 [stack 0]
push $N603c800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet6
  xpos -40
  ypos 298
 }
 Dot {
  name LoopAnchor_7
  xpos -6
  ypos 324
 }
set N603c000 [stack 0]
push $N603c000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet7
  xpos -40
  ypos 342
 }
 Dot {
  name LoopAnchor_8
  xpos -6
  ypos 368
 }
set N37c1800 [stack 0]
push $N37c1800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet8
  xpos -40
  ypos 386
 }
 Dot {
  name LoopAnchor_9
  xpos -6
  ypos 412
 }
set N37c1000 [stack 0]
push $N37c1000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet9
  xpos -40
  ypos 430
 }
 Dot {
  name LoopAnchor_10
  xpos -6
  ypos 456
 }
set N37c0800 [stack 0]
push $N37c0800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet10
  xpos -40
  ypos 474
 }
 Dot {
  name LoopAnchor_11
  xpos -6
  ypos 500
 }
set N37c0000 [stack 0]
push $N37c0000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet11
  xpos -40
  ypos 518
 }
 Dot {
  name LoopAnchor_12
  xpos -6
  ypos 544
 }
set N5d9d800 [stack 0]
push $N5d9d800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet12
  xpos -40
  ypos 562
 }
 Dot {
  name LoopAnchor_13
  xpos -6
  ypos 588
 }
set N5d9d000 [stack 0]
push $N5d9d000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet13
  xpos -40
  ypos 606
 }
 Dot {
  name LoopAnchor_14
  xpos -6
  ypos 632
 }
set N5d9c800 [stack 0]
push $N5d9c800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet14
  xpos -40
  ypos 650
 }
 Dot {
  name LoopAnchor_15
  xpos -6
  ypos 676
 }
set N5d9c000 [stack 0]
push $N5d9c000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet15
  xpos -40
  ypos 694
 }
 Dot {
  name LoopAnchor_16
  xpos -6
  ypos 720
 }
set N3537800 [stack 0]
push $N3537800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet16
  xpos -40
  ypos 738
 }
 Dot {
  name LoopAnchor_17
  xpos -6
  ypos 764
 }
set N3537000 [stack 0]
push $N3537000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet17
  xpos -40
  ypos 782
 }
 Dot {
  name LoopAnchor_18
  xpos -6
  ypos 808
 }
set N3536800 [stack 0]
push $N3536800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet18
  xpos -40
  ypos 826
 }
 Dot {
  name LoopAnchor_19
  xpos -6
  ypos 852
 }
set N3536000 [stack 0]
push $N3536000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet19
  xpos -40
  ypos 870
 }
 Dot {
  name LoopAnchor_20
  xpos -6
  ypos 896
 }
set N5def800 [stack 0]
push $N5def800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet20
  xpos -40
  ypos 914
 }
 Dot {
  name LoopAnchor_21
  xpos -6
  ypos 940
 }
set N5def000 [stack 0]
push $N5def000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet21
  xpos -40
  ypos 958
 }
 Dot {
  name LoopAnchor_22
  xpos -6
  ypos 984
 }
set N5dee800 [stack 0]
push $N5dee800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet22
  xpos -40
  ypos 1002
 }
 Dot {
  name LoopAnchor_23
  xpos -6
  ypos 1028
 }
set N5dee000 [stack 0]
push $N5dee000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet23
  xpos -40
  ypos 1046
 }
 Dot {
  name LoopAnchor_24
  xpos -6
  ypos 1072
 }
set N348f800 [stack 0]
push $N348f800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet24
  xpos -40
  ypos 1090
 }
 Dot {
  name LoopAnchor_25
  xpos -6
  ypos 1116
 }
set N348f000 [stack 0]
push $N348f000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet25
  xpos -40
  ypos 1134
 }
 Dot {
  name LoopAnchor_26
  xpos -6
  ypos 1160
 }
set N348e800 [stack 0]
push $N348e800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet26
  xpos -40
  ypos 1178
 }
 Dot {
  name LoopAnchor_27
  xpos -6
  ypos 1204
 }
set N348e000 [stack 0]
push $N348e000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet27
  xpos -40
  ypos 1222
 }
 Dot {
  name LoopAnchor_28
  xpos -6
  ypos 1248
 }
set N3541800 [stack 0]
push $N3541800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet28
  xpos -40
  ypos 1266
 }
 Dot {
  name LoopAnchor_29
  xpos -6
  ypos 1292
 }
set N3541000 [stack 0]
push $N3541000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet29
  xpos -40
  ypos 1310
 }
 Dot {
  name LoopAnchor_30
  xpos -6
  ypos 1336
 }
set N3540800 [stack 0]
push $N3540800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet30
  xpos -40
  ypos 1354
 }
 Dot {
  name LoopAnchor_31
  xpos -6
  ypos 1380
 }
set N3540000 [stack 0]
push $N3540000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet31
  xpos -40
  ypos 1398
 }
 Dot {
  name LoopAnchor_32
  xpos -6
  ypos 1424
 }
set N35e7800 [stack 0]
push $N35e7800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet32
  xpos -40
  ypos 1442
 }
 Dot {
  name LoopAnchor_33
  xpos -6
  ypos 1468
 }
set N35e7000 [stack 0]
push $N35e7000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet33
  xpos -40
  ypos 1486
 }
 Dot {
  name LoopAnchor_34
  xpos -6
  ypos 1512
 }
set N35e6800 [stack 0]
push $N35e6800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet34
  xpos -40
  ypos 1530
 }
 Dot {
  name LoopAnchor_35
  xpos -6
  ypos 1556
 }
set N35e6000 [stack 0]
push $N35e6000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet35
  xpos -40
  ypos 1574
 }
 Dot {
  name LoopAnchor_36
  xpos -6
  ypos 1600
 }
set N3765800 [stack 0]
push $N3765800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet36
  xpos -40
  ypos 1618
 }
 Dot {
  name LoopAnchor_37
  xpos -6
  ypos 1644
 }
set N3765000 [stack 0]
push $N3765000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet37
  xpos -40
  ypos 1662
 }
 Dot {
  name LoopAnchor_38
  xpos -6
  ypos 1688
 }
set N3764800 [stack 0]
push $N3764800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet38
  xpos -40
  ypos 1706
 }
 Dot {
  name LoopAnchor_39
  xpos -6
  ypos 1732
 }
set N3764000 [stack 0]
push $N3764000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet39
  xpos -40
  ypos 1750
 }
 Dot {
  name LoopAnchor_40
  xpos -6
  ypos 1776
 }
set N37b3800 [stack 0]
push $N37b3800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet40
  xpos -40
  ypos 1794
 }
 Dot {
  name LoopAnchor_41
  xpos -6
  ypos 1820
 }
set N37b3000 [stack 0]
push $N37b3000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet41
  xpos -40
  ypos 1838
 }
 Dot {
  name LoopAnchor_42
  xpos -6
  ypos 1864
 }
set N37b2800 [stack 0]
push $N37b2800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet42
  xpos -40
  ypos 1882
 }
 Dot {
  name LoopAnchor_43
  xpos -6
  ypos 1908
 }
set N37b2000 [stack 0]
push $N37b2000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet43
  xpos -40
  ypos 1926
 }
 Dot {
  name LoopAnchor_44
  xpos -6
  ypos 1952
 }
set N4027800 [stack 0]
push $N4027800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet44
  xpos -40
  ypos 1970
 }
 Dot {
  name LoopAnchor_45
  xpos -6
  ypos 1996
 }
set N4027000 [stack 0]
push $N4027000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet45
  xpos -40
  ypos 2014
 }
 Dot {
  name LoopAnchor_46
  xpos -6
  ypos 2040
 }
set N4026800 [stack 0]
push $N4026800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet46
  xpos -40
  ypos 2058
 }
 Dot {
  name LoopAnchor_47
  xpos -6
  ypos 2084
 }
set N4026000 [stack 0]
push $N4026000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet47
  xpos -40
  ypos 2102
 }
 Dot {
  name LoopAnchor_48
  xpos -6
  ypos 2128
 }
set N7fc6b800 [stack 0]
push $N7fc6b800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet48
  xpos -40
  ypos 2146
 }
 Dot {
  name LoopAnchor_49
  xpos -6
  ypos 2172
 }
set N7fc6b000 [stack 0]
push $N7fc6b000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet49
  xpos -40
  ypos 2190
 }
 Dot {
  name LoopAnchor_50
  xpos -6
  ypos 2216
 }
set N7fc6a800 [stack 0]
push $N7fc6a800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet50
  xpos -40
  ypos 2234
 }
 Dot {
  name LoopAnchor_51
  xpos -6
  ypos 2260
 }
set N7fc6a000 [stack 0]
push $N7fc6a000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet51
  xpos -40
  ypos 2278
 }
 Dot {
  name LoopAnchor_52
  xpos -6
  ypos 2304
 }
set N1d3fd800 [stack 0]
push $N1d3fd800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet52
  xpos -40
  ypos 2322
 }
 Dot {
  name LoopAnchor_53
  xpos -6
  ypos 2348
 }
set N1d3fd000 [stack 0]
push $N1d3fd000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet53
  xpos -40
  ypos 2366
 }
 Dot {
  name LoopAnchor_54
  xpos -6
  ypos 2392
 }
set N1d3fc800 [stack 0]
push $N1d3fc800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet54
  xpos -40
  ypos 2410
 }
 Dot {
  name LoopAnchor_55
  xpos -6
  ypos 2436
 }
set N1d3fc000 [stack 0]
push $N1d3fc000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet55
  xpos -40
  ypos 2454
 }
 Dot {
  name LoopAnchor_56
  xpos -6
  ypos 2480
 }
set N75193800 [stack 0]
push $N75193800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet56
  xpos -40
  ypos 2498
 }
 Dot {
  name LoopAnchor_57
  xpos -6
  ypos 2524
 }
set N75193000 [stack 0]
push $N75193000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet57
  xpos -40
  ypos 2542
 }
 Dot {
  name LoopAnchor_58
  xpos -6
  ypos 2568
 }
set N75192800 [stack 0]
push $N75192800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet58
  xpos -40
  ypos 2586
 }
 Dot {
  name LoopAnchor_59
  xpos -6
  ypos 2612
 }
set N75192000 [stack 0]
push $N75192000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet59
  xpos -40
  ypos 2630
 }
 Dot {
  name LoopAnchor_60
  xpos -6
  ypos 2656
 }
set N75377800 [stack 0]
push $N75377800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet60
  xpos -40
  ypos 2674
 }
 Dot {
  name LoopAnchor_61
  xpos -6
  ypos 2700
 }
set N75377000 [stack 0]
push $N75377000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet61
  xpos -40
  ypos 2718
 }
 Dot {
  name LoopAnchor_62
  xpos -6
  ypos 2744
 }
set N75376800 [stack 0]
push $N75376800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet62
  xpos -40
  ypos 2762
 }
 Dot {
  name LoopAnchor_63
  xpos -6
  ypos 2788
 }
set N75376000 [stack 0]
push $N75376000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet63
  xpos -40
  ypos 2806
 }
 Dot {
  name LoopAnchor_64
  xpos -6
  ypos 2832
 }
set N7fced800 [stack 0]
push $N7fced800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet64
  xpos -40
  ypos 2850
 }
 Dot {
  name LoopAnchor_65
  xpos -6
  ypos 2876
 }
set N7fced000 [stack 0]
push $N7fced000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet65
  xpos -40
  ypos 2894
 }
 Dot {
  name LoopAnchor_66
  xpos -6
  ypos 2920
 }
set N7fcec800 [stack 0]
push $N7fcec800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet66
  xpos -40
  ypos 2938
 }
 Dot {
  name LoopAnchor_67
  xpos -6
  ypos 2964
 }
set N7fcec000 [stack 0]
push $N7fcec000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet67
  xpos -40
  ypos 2982
 }
 Dot {
  name LoopAnchor_68
  xpos -6
  ypos 3008
 }
set N413d800 [stack 0]
push $N413d800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet68
  xpos -40
  ypos 3026
 }
 Dot {
  name LoopAnchor_69
  xpos -6
  ypos 3052
 }
set N413d000 [stack 0]
push $N413d000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet69
  xpos -40
  ypos 3070
 }
 Dot {
  name LoopAnchor_70
  xpos -6
  ypos 3096
 }
set N413c800 [stack 0]
push $N413c800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet70
  xpos -40
  ypos 3114
 }
 Dot {
  name LoopAnchor_71
  xpos -6
  ypos 3140
 }
set N413c000 [stack 0]
push $N413c000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet71
  xpos -40
  ypos 3158
 }
 Dot {
  name LoopAnchor_72
  xpos -6
  ypos 3184
 }
set N4701800 [stack 0]
push $N4701800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet72
  xpos -40
  ypos 3202
 }
 Dot {
  name LoopAnchor_73
  xpos -6
  ypos 3228
 }
set N4701000 [stack 0]
push $N4701000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet73
  xpos -40
  ypos 3246
 }
 Dot {
  name LoopAnchor_74
  xpos -6
  ypos 3272
 }
set N4700800 [stack 0]
push $N4700800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet74
  xpos -40
  ypos 3290
 }
 Dot {
  name LoopAnchor_75
  xpos -6
  ypos 3316
 }
set N4700000 [stack 0]
push $N4700000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet75
  xpos -40
  ypos 3334
 }
 Dot {
  name LoopAnchor_76
  xpos -6
  ypos 3360
 }
set N7fc7d800 [stack 0]
push $N7fc7d800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet76
  xpos -40
  ypos 3378
 }
 Dot {
  name LoopAnchor_77
  xpos -6
  ypos 3404
 }
set N7fc7d000 [stack 0]
push $N7fc7d000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet77
  xpos -40
  ypos 3422
 }
 Dot {
  name LoopAnchor_78
  xpos -6
  ypos 3448
 }
set N7fc7c800 [stack 0]
push $N7fc7c800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet78
  xpos -40
  ypos 3466
 }
 Dot {
  name LoopAnchor_79
  xpos -6
  ypos 3492
 }
set N7fc7c000 [stack 0]
push $N7fc7c000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet79
  xpos -40
  ypos 3510
 }
 Dot {
  name LoopAnchor_80
  xpos -6
  ypos 3536
 }
set N1fee1800 [stack 0]
push $N1fee1800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet80
  xpos -40
  ypos 3554
 }
 Dot {
  name LoopAnchor_81
  xpos -6
  ypos 3580
 }
set N1fee1000 [stack 0]
push $N1fee1000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet81
  xpos -40
  ypos 3598
 }
 Dot {
  name LoopAnchor_82
  xpos -6
  ypos 3624
 }
set N1fee0800 [stack 0]
push $N1fee0800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet82
  xpos -40
  ypos 3642
 }
 Dot {
  name LoopAnchor_83
  xpos -6
  ypos 3668
 }
set N1fee0000 [stack 0]
push $N1fee0000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet83
  xpos -40
  ypos 3686
 }
 Dot {
  name LoopAnchor_84
  xpos -6
  ypos 3712
 }
set N44b9800 [stack 0]
push $N44b9800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet84
  xpos -40
  ypos 3730
 }
 Dot {
  name LoopAnchor_85
  xpos -6
  ypos 3756
 }
set N44b9000 [stack 0]
push $N44b9000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet85
  xpos -40
  ypos 3774
 }
 Dot {
  name LoopAnchor_86
  xpos -6
  ypos 3800
 }
set N44b8800 [stack 0]
push $N44b8800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet86
  xpos -40
  ypos 3818
 }
 Dot {
  name LoopAnchor_87
  xpos -6
  ypos 3844
 }
set N44b8000 [stack 0]
push $N44b8000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet87
  xpos -40
  ypos 3862
 }
 Dot {
  name LoopAnchor_88
  xpos -6
  ypos 3888
 }
set N75601800 [stack 0]
push $N75601800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet88
  xpos -40
  ypos 3906
 }
 Dot {
  name LoopAnchor_89
  xpos -6
  ypos 3932
 }
set N75601000 [stack 0]
push $N75601000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet89
  xpos -40
  ypos 3950
 }
 Dot {
  name LoopAnchor_90
  xpos -6
  ypos 3976
 }
set N75600800 [stack 0]
push $N75600800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet90
  xpos -40
  ypos 3994
 }
 Dot {
  name LoopAnchor_91
  xpos -6
  ypos 4020
 }
set N75600000 [stack 0]
push $N75600000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet91
  xpos -40
  ypos 4038
 }
 Dot {
  name LoopAnchor_92
  xpos -6
  ypos 4064
 }
set N752c5800 [stack 0]
push $N752c5800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet92
  xpos -40
  ypos 4082
 }
 Dot {
  name LoopAnchor_93
  xpos -6
  ypos 4108
 }
set N752c5000 [stack 0]
push $N752c5000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet93
  xpos -40
  ypos 4126
 }
 Dot {
  name LoopAnchor_94
  xpos -6
  ypos 4152
 }
set N752c4800 [stack 0]
push $N752c4800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet94
  xpos -40
  ypos 4170
 }
 Dot {
  name LoopAnchor_95
  xpos -6
  ypos 4196
 }
set N752c4000 [stack 0]
push $N752c4000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet95
  xpos -40
  ypos 4214
 }
 Dot {
  name LoopAnchor_96
  xpos -6
  ypos 4240
 }
set N326b800 [stack 0]
push $N326b800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet96
  xpos -40
  ypos 4258
 }
 Dot {
  name LoopAnchor_97
  xpos -6
  ypos 4284
 }
set N326b000 [stack 0]
push $N326b000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet97
  xpos -40
  ypos 4302
 }
 Dot {
  name LoopAnchor_98
  xpos -6
  ypos 4328
 }
set N326a800 [stack 0]
push 0
push $N326a800
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet98
  xpos -40
  ypos 4346
 }
 Dot {
  name LoopAnchor_99
  xpos -6
  ypos 4372
 }
set N326a000 [stack 0]
push $N326a000
 Expression {
  temp_name0 valid
  temp_expr0 "hypot(Br, Bg) < 2"
  temp_name1 constant
  temp_expr1 EndLoop.constant
  temp_name2 a_value
  temp_expr2 EndLoop.a_value
  expr0 "valid ? pow(r, 2) - pow(g, 2) + constant*cos(a_value)  : r"
  expr1 "valid ? 2 * r * g + constant*sin(a_value) : Bg"
  expr3 "valid ? Ba + 1/(EndLoop.loops+1) : Ba"
  enable_mix_luminance false
  name Expression_JuliaSet99
  selected true
  xpos -40
  ypos 4390
 }
 Dot {
  name LoopAnchor_100
  selected true
 }
 Dissolve {
  inputs 101+1
  which {{"parent.loops - (parent.blend ? parent.scroll : floor(parent.scroll))"}}
  name Dissolve1
 }
 Output {
  name Output1
 }
end_group
Dot {
 name Dot16
 selected true
 xpos 43
 ypos -1483
}
set N1f6b2c00 [stack 0]
Dot {
 name Dot17
 selected true
 xpos 43
 ypos -1225
}
push $N1f6b2c00
Dot {
 name Dot18
 selected true
 xpos -87
 ypos -1483
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle_AlphaToRGB
 selected true
 xpos -121
 ypos -1411
}
Group {
 inputs 0
 name GradientEditor1
 tile_color 0x4b19ffff
 selected true
 xpos -433
 ypos -1481
 addUserKnob {20 User l Gradient}
 addUserKnob {26 headline l "" +STARTLINE T "<font size=\"6\">GradientEditor</font><font size=\"4\">v0.9</font>\n"}
 addUserKnob {26 headline2 l "" +STARTLINE T "by Mads Hagbarth Damsbo - 2016"}
 addUserKnob {26 devider_header l "<b><font color=#00E0E0>INPUT MAPPING</font><b>"}
 addUserKnob {4 Type M {Input Generator}}
 Type Generator
 addUserKnob {4 sample_type l Sample -STARTLINE M {Magnitude Maximum Average Red Green Blue Alpha "" "" ""}}
 sample_type Average
 addUserKnob {41 in l From -STARTLINE T Shuffle1.in}
 addUserKnob {6 Invert l Reverse -STARTLINE}
 addUserKnob {26 deviderMain l "<b><font color=#00E0E0>GRADIENT</font><b>"}
 addUserKnob {52 ui l "" +STARTLINE T ColorGradientUi.ColorWheelKnob_GRADIENT() +STARTLINE}
 addUserKnob {7 input_valueLow l Interval R -1 1}
 addUserKnob {4 lowCont l "" -STARTLINE M {Hold Loop Bounce}}
 lowCont Bounce
 addUserKnob {7 input_valueHigh l "" -STARTLINE R 0 2}
 input_valueHigh 1
 addUserKnob {4 highCont l "" -STARTLINE M {Hold Loop Bounce ""}}
 highCont Bounce
 addUserKnob {4 Interpolation l INVISIBLE +INVISIBLE M {Constant Linear Smooth Catmull-Rom Cubic Horizontal ""}}
 Interpolation Catmull-Rom
 addUserKnob {6 PreserceLuma l "Preserve Luma" +STARTLINE}
 addUserKnob {26 devider_phasing l "<b><font color=#00E0E0>PHASING</font><b>"}
 addUserKnob {7 Phase R 0 10}
 addUserKnob {7 Frequency R 0 10}
 Frequency 1
 addUserKnob {26 devider_Input l "<b><font color=#00E0E0>PREMULT</font><b>"}
 addUserKnob {41 colorspace_in l " colorspace " T Colorspace2.colorspace_in}
 addUserKnob {41 alpha l "Unpremult by" T Unpremult1.alpha}
 addUserKnob {6 Premult -STARTLINE}
 addUserKnob {20 responsecurve_tab l "Response Curve"}
 addUserKnob {26 CurveInfo l "" +STARTLINE T "Use the master curve to control the response curve"}
 addUserKnob {26 ""}
 addUserKnob {41 lut l "" +STARTLINE T ColorLookup2.lut}
}
 Input {
  inputs 0
  name Input1
  xpos -3
  ypos -76
 }
set N75593c00 [stack 0]
 Dot {
  name Dot1
  xpos 351
  ypos -73
 }
 Dot {
  name Dot2
  xpos 351
  ypos 642
 }
push $N75593c00
 Expression {
  expr0 x/width
  expr1 x/width
  expr2 x/width
  expr3 1
  name Expression1
  xpos 114
  ypos -25
 }
push $N75593c00
 Shuffle {
  name Shuffle1
  xpos -3
  ypos -43
 }
 Unpremult {
  alpha -rgba.alpha
  name Unpremult1
  xpos -3
  ypos -19
 }
 Switch {
  inputs 2
  which {{parent.Type}}
  name Switch1
  xpos -3
  ypos 20
 }
set N75592400 [stack 0]
 Dot {
  name Dot3
  xpos -225
  ypos 88
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace1
  xpos -467
  ypos 135
 }
push $N75592400
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle5
  xpos 260
  ypos 149
 }
push $N75592400
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle4
  xpos 174
  ypos 150
 }
push $N75592400
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle3
  xpos 85
  ypos 148
 }
push $N75592400
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle2
  selected true
  xpos -3
  ypos 148
 }
push $N75592400
 Saturation {
  saturation 0
  mode Average
  name Saturation2
  xpos -113
  ypos 145
 }
push $N75592400
 Saturation {
  saturation 0
  mode Maximum
  name Saturation1
  xpos -232
  ypos 147
 }
push $N75592400
 Expression {
  temp_name3 VectorLength_3D
  temp_expr3 sqrt(Red*Red+Green*Green+Blue*Blue)
  expr0 VectorLength_3D
  expr1 VectorLength_3D
  expr2 VectorLength_3D
  name Vector_Length3D
  xpos -336
  ypos 148
 }
 Switch {
  inputs 7
  which {{parent.sample_type}}
  name Switch3
  xpos -3
  ypos 367
 }
 Grade {
  blackpoint {{parent.input_valueLow}}
  whitepoint {{parent.input_valueHigh}}
  multiply {{parent.Frequency}}
  add {{parent.Phase}}
  black_clamp false
  name Grade1
  xpos -3
  ypos 391
 }
 Invert {
  name Invert1
  xpos -3
  ypos 415
  disable {{!parent.Invert}}
 }
 Expression {
  temp_name0 antR
  temp_expr0 (floor(r/2)-(floor((r+1)/2)-1))
  temp_name1 antG
  temp_expr1 (floor(g/2)-(floor((g+1)/2)-1))
  temp_name2 antB
  temp_expr2 (floor(b/2)-(floor((b+1)/2)-1))
  expr0 r<=parent.input_valueLow?parent.lowCont==0?r:parent.lowCont==1?r-floor(r):((1-(r-floor(r)))*(1-antR))+(((r-floor(r)))*(antR)):parent.highCont==0?r:parent.highCont==1?r-floor(r):((1-(r-floor(r)))*(1-antR))+(((r-floor(r)))*(antR))
  expr1 g<=parent.input_valueLow?parent.lowCont==0?g:parent.lowCont==1?g-floor(g):((1-(g-floor(g)))*(1-antG))+(((g-floor(g)))*(antG)):parent.highCont==0?g:parent.highCont==1?g-floor(g):((1-(g-floor(g)))*(1-antG))+(((g-floor(g)))*(antG))
  expr2 b<=parent.input_valueLow?parent.lowCont==0?b:parent.lowCont==1?b-floor(b):((1-(b-floor(b)))*(1-antB))+(((b-floor(b)))*(antB)):parent.highCont==0?b:parent.highCont==1?b-floor(b):((1-(b-floor(b)))*(1-antB))+(((b-floor(b)))*(antB))
  name Expression2
  xpos -3
  ypos 491
 }
 ColorLookup {
  lut {master {curve 0 1}
    red {}
    green {}
    blue {}
    alpha {}}
  name ColorLookup2
  xpos -3
  ypos 562
 }
 ColorLookup {
  lut {master {}
    red {curve R 0.3765011063 x0.08351177722 0.09945830472 x0.1311787069 1 x0.180608362 1 x0.3688212931 1 x0.6140684485 0 L x1 0}
    green {curve R 0 x0.08351177722 0.8745098039 x0.1311787069 0.8980544747 x0.180608362 0.5474784466 x0.3688212931 0 x0.6140684485 0.988174258 L x1 0}
    blue {curve R 1 x0.08351177722 0.7742732891 x0.1311787069 0.2117647059 x0.180608362 0.1450980392 x0.3688212931 0 x0.6140684485 1 L x1 0}
    alpha {curve R 1 x0.08351177722 1 x0.1311787069 1 x0.180608362 1 x0.3688212931 1 x0.6140684485 1 L x1 1}}
  name ColorLookup1
  xpos -2
  ypos 586
  addUserKnob {20 User}
  addUserKnob {22 chek +STARTLINE}
 }
 Colorspace {
  colorspace_in sRGB
  name Colorspace2
  xpos -2
  ypos 669
 }
set N75690400 [stack 0]
 Colorspace {
  colorspace_out YCbCr
  name Colorspace8
  xpos -334
  ypos 669
 }
 ShuffleCopy {
  inputs 2
  red red
  name ShuffleCopy2
  xpos -467
  ypos 669
 }
 Colorspace {
  colorspace_in YCbCr
  name Colorspace9
  xpos -467
  ypos 708
 }
push $N75690400
 Switch {
  inputs 2
  which {{parent.PreserceLuma}}
  name Switch2
  xpos -2
  ypos 708
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy1
  xpos -2
  ypos 788
 }
 Premult {
  name Premult1
  xpos -2
  ypos 812
  disable {{!parent.Premult}}
 }
 Output {
  name Output1
  xpos -2
  ypos 866
 }
end_group
Saturation {
 saturation 1.6
 name Saturation1
 selected true
 xpos -433
 ypos -1455
}
Clamp {
 channels rgb
 name Clamp1
 selected true
 xpos -433
 ypos -1391
}
Dot {
 name Dot3
 note_font_size 30
 selected true
 xpos -399
 ypos -1317
}
STMap {
 inputs 2
 channels rgb
 uv rgb
 name STMap1
 selected true
 xpos -121
 ypos -1320
}
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy1
 selected true
 xpos -121
 ypos -1236
}
Dot {
 name Dot15
 selected true
 xpos -87
 ypos -831
}
set N755e1000 [stack 0]
Dot {
 name Dot19
 selected true
 xpos -447
 ypos -831
}
Expression {
 expr3 "a > .99"
 name Expression_FillOnly
 selected true
 xpos -481
 ypos -473
}
Dot {
 name Dot20
 selected true
 xpos -447
 ypos 1158
}
Noise {
 inputs 0
 size 2.5
 zoffset {{frame/20}}
 center {512 512}
 name Noise1
 selected true
 xpos 38
 ypos 146
}
Grade {
 blackpoint 0.74
 white 2.5
 name Grade3
 selected true
 xpos 38
 ypos 233
}
TimeEcho {
 mode Average
 framesbehind 20
 frmaesfade 0
 name TimeEcho1
 selected true
 xpos 38
 ypos 259
}
Dot {
 name Dot21
 selected true
 xpos 72
 ypos 332
}
set N1f64f400 [stack 0]
Dot {
 name Dot22
 selected true
 xpos 262
 ypos 332
}
Transform {
 scale 1.008
 center {512 512}
 name Transform1
 selected true
 xpos 228
 ypos 367
}
Crop {
 box {0 0 1024 1024}
 crop false
 name Crop1
 selected true
 xpos 228
 ypos 393
}
Dot {
 name Dot23
 selected true
 xpos 262
 ypos 464
}
push $N1f64f400
ShuffleCopy {
 inputs 2
 red red
 alpha white
 name ShuffleCopy1
 selected true
 xpos 38
 ypos 460
}
Dot {
 name Dot25
 selected true
 xpos 72
 ypos 803
}
set N75621c00 [stack 0]
Dot {
 name Dot26
 selected true
 xpos 262
 ypos 803
}
TimeOffset {
 time_offset 439
 time ""
 name TimeOffset1
 selected true
 xpos 228
 ypos 837
}
Dot {
 name Dot27
 selected true
 xpos 262
 ypos 878
}
push $N75621c00
Dissolve {
 inputs 2
 which {{curve x339 0 s0 x439 1 s0}}
 name Dissolve1
 selected true
 xpos 38
 ypos 867
}
Dot {
 name Dot14
 selected true
 xpos 72
 ypos 1158
}
push $N755e1000
Dot {
 name Dot6
 selected true
 xpos -87
 ypos -582
}
set N75620800 [stack 0]
Camera2 {
 inputs 0
 translate {0 0 0.5500000119}
 name Camera1
 selected true
 xpos -231
 ypos -363
}
Light2 {
 inputs 0
 intensity 7
 translate {0.5 0.5 1.6}
 depthmap_slope_bias 0.01
 name Light1
 selected true
 xpos -228
 ypos -473
}
push $N75620800
Dot {
 name Dot11
 selected true
 xpos 58
 ypos -582
}
set N75573c00 [stack 0]
Dot {
 name Dot8
 selected true
 xpos 216
 ypos -582
}
set N75573800 [stack 0]
Dot {
 name Dot2
 selected true
 xpos 442
 ypos -582
}
set N75573400 [stack 0]
Matrix {
 matrix {
     {2 0 -2}
     {1 0 -1}
     {2 0 -2}
   }
 name Matrix1
 selected true
 xpos 408
 ypos -515
}
push $N75573400
Dot {
 name Dot4
 selected true
 xpos 565
 ypos -582
}
Matrix {
 matrix {
     {-2 -1 -2}
     {0 0 0}
     {2 1 2}
   }
 name Matrix2
 selected true
 xpos 531
 ypos -515
}
Dot {
 name Dot7
 selected true
 xpos 565
 ypos -442
}
ShuffleCopy {
 inputs 2
 red red
 blue white
 alpha black
 name ShuffleCopy_Sobel
 selected true
 xpos 408
 ypos -446
}
Grade {
 multiply 2.55
 name Grade1
 selected true
 xpos 408
 ypos -420
}
Dot {
 name Dot12
 selected true
 xpos 442
 ypos -377
}
push $N75573800
Expression {
 expr0 (x+.5)/width
 expr1 (y+.5)/height
 expr2 1
 name Expression1
 selected true
 xpos 182
 ypos -462
}
Dot {
 name Dot13
 selected true
 xpos 216
 ypos -422
}
push $N75573c00
add_layer {position position.r position.g position.b position.red position.green position.blue position.alpha}
ShuffleCopy {
 inputs 2
 alpha white
 black red
 white green
 red2 blue
 out2 position
 name ShuffleCopy_Position
 selected true
 xpos 24
 ypos -426
}
add_layer {normal normal.r normal.g normal.b normal.red normal.green normal.blue normal.alpha}
ShuffleCopy {
 inputs 2
 alpha white
 black red
 white green
 red2 white
 out2 normal
 name ShuffleCopy_NormalMap
 selected true
 xpos 24
 ypos -381
}
Dot {
 name Dot24
 selected true
 xpos 58
 ypos -339
}
ReLight {
 inputs 4
 normal normal
 position position
 name ReLight1
 selected true
 xpos -121
 ypos -343
}
Merge2 {
 inputs 2+1
 operation plus
 output {rgba.red rgba.green rgba.blue -rgba.alpha}
 name Merge1
 selected true
 xpos -121
 ypos 1154
}
Dot {
 name Dot5
 label "Julia set animated\nframe range 1- 439"
 note_font_size 30
 selected true
 xpos -87
 ypos 1518
}
